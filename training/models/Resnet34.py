import torch.nn as nn
import torch.nn.functional as F

class Resnet34(nn.Module):
    def __init__(self):
        super(Resnet34, self).__init__()
        # Define all the layers
        self.layer1 =nn.Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2 =nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer4= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer5= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer6= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer7_shortcut= nn.Sequential()
        self.layer8= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer9= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer10= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer11= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer12_shortcut= nn.Sequential()
        self.layer13= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer14= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer15= nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer16= nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer17_shortcut= nn.Sequential()
        self.layer18= nn.Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer19= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer20= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer21= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer22_shortcut= nn.Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer23_shortcut= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer24= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer25= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer26= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer27= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer28_shortcut= nn.Sequential()
        self.layer29= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer30= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer31= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer32= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer33_shortcut= nn.Sequential()
        self.layer34= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer35= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer36= nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer37= nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer38_shortcut= nn.Sequential()
        self.layer39= nn.Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer40= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer41= nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer42= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer43_shortcut= nn.Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer44_shortcut= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer45= nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer46= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer47= nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer48= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer49_shortcut= nn.Sequential()
        self.layer50= nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer51= nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer52= nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer53 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer54_shortcut = nn.Sequential()
        self.layer55 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer56 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer57 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer58 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer59_shortcut = nn.Sequential()
        self.layer60 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer61 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer62 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer63 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer64_shortcut = nn.Sequential()
        self.layer65 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer66 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer67 = nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer68 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer69_shortcut = nn.Sequential()
        self.layer70 = nn.Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer71 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer72 = nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer73 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer74_shortcut = nn.Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer75_shortcut = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer76 = nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer77 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer78 = nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer79 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer80_shortcut = nn.Sequential()
        self.layer81 = nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer82 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer83 = nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer84 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer85_shortcut= nn.Sequential()
        self.layer86= nn.Linear(in_features=512, out_features=10, bias=True)
        
        self.act=nn.ReLU()
    def forward(self, x):
        out=self.layer1(x)
        out=self.layer2(out)
        out=self.act(out)
        x=out.clone()
        out=self.layer3(out)
        out=self.layer4(out)
        out=self.act(out)
        out=self.layer5(out)
        out=self.layer6(out)
        # out+=self.layer7_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer8(x)
        out=self.layer9(out)
        out=self.act(out)
        out=self.layer10(out)
        out=self.layer11(out)
        # out+=self.layer12_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer13(x)
        out=self.layer14(out)
        out=self.act(out)
        out=self.layer15(out)
        out=self.layer16(out)
        # x=self.layer17_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer18(x)
        out=self.layer19(out)
        out=self.act(out)
        out=self.layer20(out)
        out=self.layer21(out)
        x=self.layer22_shortcut(x)
        x=self.layer23_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer24(x)
        out=self.layer25(out)
        out=self.act(out)
        out=self.layer26(out)
        out=self.layer27(out)
        # x=self.layer28_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer29(x)
        out=self.layer30(out)
        out=self.act(out)
        out=self.layer31(out)
        out=self.layer32(out)
        # out+=self.layer33_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer34(x)
        out=self.layer35(out)
        out=self.act(out)
        out=self.layer36(out)
        out=self.layer37(out)
        # x=self.layer38_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer39(x)
        out=self.layer40(out)
        out=self.act(out)
        out=self.layer41(out)
        out=self.layer42(out)
        x =self.layer43_shortcut(x)
        x =self.layer44_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer45(x)
        out=self.layer46(out)
        out=self.act(out)
        out=self.layer47(out)
        out=self.layer48(out)
        # x=self.layer49_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer50(x)
        out=self.layer51(out)
        out=self.act(out)
        out=self.layer52(out)
        out=self.layer53(out)
        # x=self.layer54_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer55(x)
        out=self.layer56(out)
        out=self.act(out)
        out=self.layer57(out)
        out=self.layer58(out)
        # x=self.layer59_shortcut(x)
        out+=x
        out=self.act(out)
        
        x=out.clone()
        out=self.layer60(x)
        out=self.layer61(out)
        out=self.act(out)
        out=self.layer62(out)
        out=self.layer63(out)
        # x=self.layer64_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer65(x)
        out=self.layer66(out)
        out=self.act(out)
        out=self.layer67(out)
        out=self.layer68(out)
        # x=self.layer69_shortcut(x)
        out+=x
        out=self.act(out)

        x=out.clone()
        out=self.layer70(x)
        out=self.layer71(out)
        out=self.act(out)
        out=self.layer72(out)
        out=self.layer73(out)
        x=self.layer74_shortcut(x)
        x=self.layer75_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer76(x)
        out=self.layer77(out)
        out=self.act(out)
        out=self.layer78(out)
        out=self.layer79(out)
        # x=self.layer80_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer81(x)
        out=self.layer82(out)
        out=self.act(out)
        out=self.layer83(out)
        out=self.layer84(out)
        # x=self.layer85_shortcut(x)
        out+=x
        out=self.act(out)
        out =F.avg_pool2d(out,4)
        out = out.view(out.size(0), -1)
        out=self.layer86(out)
        return out
