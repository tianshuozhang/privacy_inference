import torch.nn as nn
class vgg13(nn.Module):
    def __init__(self):
        super(vgg13, self).__init__()
        self.layer1=nn.Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer2=nn.ReLU(inplace=True)
        self.layer3=nn.Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer4=nn.ReLU(inplace=True)
        self.layer5=nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.layer6=nn.Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer7=nn.ReLU(inplace=True)
        self.layer8=nn.Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer9=nn.ReLU(inplace=True)
        self.layer10=nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.layer11=nn.Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer12=nn.ReLU(inplace=True)
        self.layer13=nn.Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer14=nn.ReLU(inplace=True)
        self.layer15=nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.layer16=nn.Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer17=nn.ReLU(inplace=True)
        self.layer18=nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer19=nn.ReLU(inplace=True)
        self.layer20=nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.layer21=nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer22=nn.ReLU(inplace=True)
        self.layer23=nn.Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        self.layer24=nn.ReLU(inplace=True)
        self.layer25=nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.layer26=nn.Dropout(p=0.5, inplace=False)
        self.layer27=nn.Linear(in_features=512, out_features=512, bias=True)
        self.layer28=nn.ReLU(inplace=True)
        self.layer29=nn.Dropout(p=0.5, inplace=False)
        self.layer30=nn.Linear(in_features=512, out_features=512, bias=True)
        self.layer31=nn.ReLU(inplace=True)
        self.layer32=nn.Linear(in_features=512, out_features=10, bias=True)
    def forward(self,x):
        out = self.layer1(x)
        out = self.layer2(out)
        out = self.layer3(out)
        out = self.layer4(out)
        out = self.layer5(out)
        out = self.layer6(out)
        out = self.layer7(out)
        out = self.layer8(out)
        out = self.layer9(out)
        out = self.layer10(out)
        out = self.layer11(out)
        out = self.layer12(out)
        out = self.layer13(out)
        out = self.layer14(out)
        out = self.layer15(out)
        out = self.layer16(out)
        out = self.layer17(out)
        out = self.layer18(out)
        out = self.layer19(out)
        out = self.layer20(out)
        out = self.layer21(out)
        out = self.layer22(out)
        out = self.layer23(out)
        out = self.layer24(out)
        out = self.layer25(out)
        out = out.view(out.size(0), -1)
        out = self.layer26(out)
        out = self.layer27(out)
        out = self.layer28(out)
        out = self.layer29(out)
        out = self.layer30(out)
        out = self.layer31(out)
        out = self.layer32(out)
        return out
