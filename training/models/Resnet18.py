import torch.nn as nn
import torch.nn.functional as F

class Resnet18(nn.Module):
    def __init__(self):
        super(Resnet18, self).__init__()
        # Define all the layers
        self.layer1 = nn.Conv2d(3, 64, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer2 = nn.BatchNorm2d(64)
        self.layer3 = nn.Conv2d(64, 64, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer4 = nn.BatchNorm2d(64)
        self.layer5 = nn.Conv2d(64, 64, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer6 = nn.BatchNorm2d(64)
        self.layer7_shortcut = nn.Sequential()
        self.layer8 = nn.Conv2d(64, 64, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer9 = nn.BatchNorm2d(64)
        self.layer10 = nn.Conv2d(64, 64, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer11 = nn.BatchNorm2d(64)
        self.layer12_shortcut = nn.Sequential()
        self.layer13 = nn.Conv2d(64, 128, kernel_size=3, stride=2, padding=1, bias=False)
        self.layer14 = nn.BatchNorm2d(128)
        self.layer15 = nn.Conv2d(128, 128, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer16 = nn.BatchNorm2d(128)
        self.layer17_shortcut = nn.Conv2d(64, 128, kernel_size=1, stride=2, bias=False)
        self.layer18_shortcut = nn.BatchNorm2d(128)
        self.layer19 = nn.Conv2d(128, 128, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer20 = nn.BatchNorm2d(128)
        self.layer21 = nn.Conv2d(128, 128, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer22 = nn.BatchNorm2d(128)
        self.layer23_shortcut = nn.Sequential()
        self.layer24 = nn.Conv2d(128, 256, kernel_size=3, stride=2, padding=1, bias=False)
        self.layer25 = nn.BatchNorm2d(256)
        self.layer26 = nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer27 = nn.BatchNorm2d(256)
        self.layer28_shortcut = nn.Conv2d(128, 256, kernel_size=1, stride=2, bias=False)
        self.layer29_shortcut = nn.BatchNorm2d(256)
        self.layer30 = nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer31 = nn.BatchNorm2d(256)
        self.layer32 = nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer33 = nn.BatchNorm2d(256)
        self.layer34_shortcut = nn.Sequential()
        self.layer35 = nn.Conv2d(256, 512, kernel_size=3, stride=2, padding=1, bias=False)
        self.layer36 = nn.BatchNorm2d(512)
        self.layer37 = nn.Conv2d(512, 512, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer38 = nn.BatchNorm2d(512)
        self.layer39_shortcut = nn.Conv2d(256, 512, kernel_size=1, stride=2, bias=False)
        self.layer40_shortcut = nn.BatchNorm2d(512)
        self.layer41 = nn.Conv2d(512, 512, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer42 = nn.BatchNorm2d(512)
        self.layer43 = nn.Conv2d(512, 512, kernel_size=3, stride=1, padding=1, bias=False)
        self.layer44 = nn.BatchNorm2d(512)
        self.layer45_shortcut = nn.Sequential()
        self.layer46 = nn.Linear(512, 10)
        self.act=nn.ReLU()
    def forward(self, x):
        out=self.layer1(x)
        out=self.layer2(out)
        out=self.act(out)
        x=out.clone()
        out=self.layer3(out)
        out=self.layer4(out)
        out=self.act(out)
        out=self.layer5(out)
        out=self.layer6(out)
        # out+=self.layer7_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer8(x)
        out=self.layer9(out)
        out=self.act(out)
        out=self.layer10(out)
        out=self.layer11(out)
        # out+=self.layer12_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer13(x)
        out=self.layer14(out)
        out=self.act(out)
        out=self.layer15(out)
        out=self.layer16(out)
        x=self.layer17_shortcut(x)
        out+=self.layer18_shortcut(x)
        out=self.act(out)
        x=out.clone()
        out=self.layer19(x)
        out=self.layer20(out)
        out=self.act(out)
        out=self.layer21(out)
        out=self.layer22(out)
        # out+=self.layer23_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer24(x)
        out=self.layer25(out)
        out=self.act(out)
        out=self.layer26(out)
        out=self.layer27(out)
        x=self.layer28_shortcut(x)
        out+=self.layer29_shortcut(x)
        out=self.act(out)
        x=out.clone()
        out=self.layer30(x)
        out=self.layer31(out)
        out=self.act(out)
        out=self.layer32(out)
        out=self.layer33(out)
        # out+=self.layer34_shortcut(x)
        out+=x
        out=self.act(out)
        x=out.clone()
        out=self.layer35(x)
        out=self.layer36(out)
        out=self.act(out)
        out=self.layer37(out)
        out=self.layer38(out)
        x=self.layer39_shortcut(x)
        out+=self.layer40_shortcut(x)
        out=self.act(out)
        x=out.clone()
        out=self.layer41(x)
        out=self.layer42(out)
        out=self.act(out)
        out=self.layer43(out)
        out=self.layer44(out)
        # out+=self.layer45_shortcut(x)
        out+=x
        out=self.act(out)
        out =F.avg_pool2d(out,4)
        out = out.view(out.size(0), -1)
        out=self.layer46(out)
        return out
